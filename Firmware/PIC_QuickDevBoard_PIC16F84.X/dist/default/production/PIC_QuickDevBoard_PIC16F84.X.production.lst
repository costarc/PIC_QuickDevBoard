

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 11 18:20:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x4E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F84A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     0081                     	;# 
    58     0085                     	;# 
    59     0086                     	;# 
    60     0088                     	;# 
    61     0089                     	;# 
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     0081                     	;# 
    74     0085                     	;# 
    75     0086                     	;# 
    76     0088                     	;# 
    77     0089                     	;# 
    78     0005                     _PORTAbits	set	5
    79     0085                     _TRISA	set	133
    80                           
    81                           	psect	cinit
    82     03FE                     start_initialization:	
    83                           ; #config settings
    84                           
    85     03FE                     __initialization:
    86     03FE                     end_of_initialization:	
    87                           ;End of C runtime variable initialization code
    88                           
    89     03FE                     __end_of__initialization:
    90     03FE  0183               	clrf	3
    91     03FF  2B7F               	ljmp	_main	;jump to C main() function
    92                           
    93                           	psect	cstackCOMMON
    94     0000                     __pcstackCOMMON:
    95     0000                     ??_onboardDemo:
    96     0000                     ??_main:	
    97                           ; 1 bytes @ 0x0
    98                           
    99                           
   100                           	psect	cstackBANK0
   101     000C                     __pcstackBANK0:	
   102                           ; 1 bytes @ 0x0
   103                           
   104     000C                     ?_Delayms:
   105     000C                     Delayms@milliseconds:	
   106                           ; 1 bytes @ 0x0
   107                           
   108                           
   109                           ; 4 bytes @ 0x0
   110     000C                     	ds	4
   111     0010                     ??_Delayms:
   112                           
   113                           ; 1 bytes @ 0x4
   114     0010                     	ds	4
   115     0014                     Delayms@ms:
   116                           
   117                           ; 4 bytes @ 0x8
   118     0014                     	ds	4
   119     0018                     Delayms@count:
   120                           
   121                           ; 4 bytes @ 0xC
   122     0018                     	ds	4
   123     001C                     ?_onboardDemo:
   124     001C                     onboardDemo@delay:	
   125                           ; 1 bytes @ 0x10
   126                           
   127                           
   128                           ; 2 bytes @ 0x10
   129     001C                     	ds	2
   130     001E                     ?_main:
   131     001E                     main@argc:	
   132                           ; 2 bytes @ 0x12
   133                           
   134                           
   135                           ; 2 bytes @ 0x12
   136     001E                     	ds	2
   137     0020                     main@argv:
   138                           
   139                           ; 2 bytes @ 0x14
   140     0020                     	ds	2
   141                           
   142                           	psect	maintext
   143     037F                     __pmaintext:	
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 39 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;  argc            2   18[BANK0 ] int 
   152 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  2   18[BANK0 ] int 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0, pclath, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : B00/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMMON   BANK0
   164 ;;      Params:         0       4
   165 ;;      Locals:         0       0
   166 ;;      Temps:          0       0
   167 ;;      Totals:         0       4
   168 ;;Total ram usage:        4 bytes
   169 ;; Hardware stack levels required when called: 2
   170 ;; This function calls:
   171 ;;		_onboardDemo
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177     037F                     _main:	
   178                           ;psect for function _main
   179                           
   180     037F                     l21:	
   181                           ;incstack = 0
   182                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   183                           ;main.c: 45:     while (1) {
   184                           
   185     037F                     l607:
   186                           
   187                           ;main.c: 46:         TRISA = 0b00111101;
   188     037F  303D               	movlw	61
   189     0380  1683               	bsf	3,5	;RP0=1, select bank1
   190     0381  0085               	movwf	5	;volatile
   191                           
   192                           ;main.c: 47:         while (PORTAbits.RA0) {
   193     0382  2B88               	goto	l611
   194     0383                     l609:
   195                           
   196                           ;main.c: 48:             onboardDemo(500);
   197     0383  30F4               	movlw	244
   198     0384  009C               	movwf	onboardDemo@delay
   199     0385  3001               	movlw	1
   200     0386  009D               	movwf	onboardDemo@delay+1
   201     0387  236C               	fcall	_onboardDemo
   202     0388                     l611:
   203                           
   204                           ;main.c: 47:         while (PORTAbits.RA0) {
   205     0388  1283               	bcf	3,5	;RP0=0, select bank0
   206     0389  1805               	btfsc	5,0	;volatile
   207     038A  2B8C               	goto	u101
   208     038B  2B8D               	goto	u100
   209     038C                     u101:
   210     038C  2B83               	goto	l609
   211     038D                     u100:
   212     038D                     l613:
   213                           
   214                           ;main.c: 51:         onboardDemo(50);
   215     038D  3032               	movlw	50
   216     038E  009C               	movwf	onboardDemo@delay
   217     038F  3000               	movlw	0
   218     0390  009D               	movwf	onboardDemo@delay+1
   219     0391  236C               	fcall	_onboardDemo
   220     0392  2B7F               	goto	l21
   221     0393  2800               	ljmp	start
   222     0394                     __end_of_main:
   223                           
   224                           	psect	text1
   225     036C                     __ptext1:	
   226 ;; *************** function _onboardDemo *****************
   227 ;; Defined at:
   228 ;;		line 32 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;  delay           2   16[BANK0 ] unsigned int 
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0
   242 ;;      Params:         0       2
   243 ;;      Locals:         0       0
   244 ;;      Temps:          0       0
   245 ;;      Totals:         0       2
   246 ;;Total ram usage:        2 bytes
   247 ;; Hardware stack levels used: 1
   248 ;; Hardware stack levels required when called: 1
   249 ;; This function calls:
   250 ;;		_Delayms
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256     036C                     _onboardDemo:	
   257                           ;psect for function _onboardDemo
   258                           
   259     036C                     l601:	
   260                           ;incstack = 0
   261                           ; Regs used in _onboardDemo: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;main.c: 33:     PORTAbits.RA1 = 1;
   265     036C  1283               	bcf	3,5	;RP0=0, select bank0
   266     036D  1485               	bsf	5,1	;volatile
   267     036E                     l603:
   268                           
   269                           ;main.c: 34:     Delayms(delay);
   270     036E  081C               	movf	onboardDemo@delay,w
   271     036F  008C               	movwf	Delayms@milliseconds
   272     0370  081D               	movf	onboardDemo@delay+1,w
   273     0371  008D               	movwf	Delayms@milliseconds+1
   274     0372  018E               	clrf	Delayms@milliseconds+2
   275     0373  018F               	clrf	Delayms@milliseconds+3
   276     0374  2394               	fcall	_Delayms
   277     0375                     l605:
   278                           
   279                           ;main.c: 35:     PORTAbits.RA1 = 0;
   280     0375  1283               	bcf	3,5	;RP0=0, select bank0
   281     0376  1085               	bcf	5,1	;volatile
   282                           
   283                           ;main.c: 36:     Delayms(delay);
   284     0377  081C               	movf	onboardDemo@delay,w
   285     0378  008C               	movwf	Delayms@milliseconds
   286     0379  081D               	movf	onboardDemo@delay+1,w
   287     037A  008D               	movwf	Delayms@milliseconds+1
   288     037B  018E               	clrf	Delayms@milliseconds+2
   289     037C  018F               	clrf	Delayms@milliseconds+3
   290     037D  2394               	fcall	_Delayms
   291     037E                     l16:
   292     037E  0008               	return
   293     037F                     __end_of_onboardDemo:
   294                           
   295                           	psect	text2
   296     0394                     __ptext2:	
   297 ;; *************** function _Delayms *****************
   298 ;; Defined at:
   299 ;;		line 17 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;  milliseconds    4    0[BANK0 ] unsigned long 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  count           4   12[BANK0 ] unsigned long 
   304 ;;  ms              4    8[BANK0 ] unsigned long 
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0
   314 ;;      Params:         0       4
   315 ;;      Locals:         0       8
   316 ;;      Temps:          0       4
   317 ;;      Totals:         0      16
   318 ;;Total ram usage:       16 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_onboardDemo
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327     0394                     _Delayms:	
   328                           ;psect for function _Delayms
   329                           
   330     0394                     l593:	
   331                           ;incstack = 0
   332                           ; Regs used in _Delayms: [wreg+status,2+status,0]
   333                           
   334                           
   335                           ;main.c: 17: void Delayms(DWORD milliseconds);main.c: 18: {;main.c: 19:     DWORD ms;;ma
      +                          in.c: 20:     DWORD count;;main.c: 22:     ms = milliseconds;
   336     0394  1283               	bcf	3,5	;RP0=0, select bank0
   337     0395  080F               	movf	Delayms@milliseconds+3,w
   338     0396  0097               	movwf	Delayms@ms+3
   339     0397  080E               	movf	Delayms@milliseconds+2,w
   340     0398  0096               	movwf	Delayms@ms+2
   341     0399  080D               	movf	Delayms@milliseconds+1,w
   342     039A  0095               	movwf	Delayms@ms+1
   343     039B  080C               	movf	Delayms@milliseconds,w
   344     039C  0094               	movwf	Delayms@ms
   345                           
   346                           ;main.c: 23:     while (ms--)
   347     039D  2BD2               	goto	l599
   348     039E                     l595:
   349                           
   350                           ;main.c: 24:     {;main.c: 25:         count = 10;
   351     039E  3000               	movlw	0
   352     039F  1283               	bcf	3,5	;RP0=0, select bank0
   353     03A0  009B               	movwf	Delayms@count+3
   354     03A1  3000               	movlw	0
   355     03A2  009A               	movwf	Delayms@count+2
   356     03A3  3000               	movlw	0
   357     03A4  0099               	movwf	Delayms@count+1
   358     03A5  300A               	movlw	10
   359     03A6  0098               	movwf	Delayms@count
   360     03A7                     l597:	
   361                           ;main.c: 26:         while (count--);
   362                           
   363     03A7  3001               	movlw	1
   364     03A8  1283               	bcf	3,5	;RP0=0, select bank0
   365     03A9  0090               	movwf	??_Delayms
   366     03AA  3000               	movlw	0
   367     03AB  0091               	movwf	??_Delayms+1
   368     03AC  3000               	movlw	0
   369     03AD  0092               	movwf	??_Delayms+2
   370     03AE  3000               	movlw	0
   371     03AF  0093               	movwf	??_Delayms+3
   372     03B0  0810               	movf	??_Delayms,w
   373     03B1  0298               	subwf	Delayms@count,f
   374     03B2  0811               	movf	??_Delayms+1,w
   375     03B3  1C03               	skipc
   376     03B4  0F11               	incfsz	??_Delayms+1,w
   377     03B5  2BB7               	goto	u65
   378     03B6  2BB8               	goto	u66
   379     03B7                     u65:
   380     03B7  0299               	subwf	Delayms@count+1,f
   381     03B8                     u66:
   382     03B8  0812               	movf	??_Delayms+2,w
   383     03B9  1C03               	skipc
   384     03BA  0F12               	incfsz	??_Delayms+2,w
   385     03BB  2BBD               	goto	u67
   386     03BC  2BBE               	goto	u68
   387     03BD                     u67:
   388     03BD  029A               	subwf	Delayms@count+2,f
   389     03BE                     u68:
   390     03BE  0813               	movf	??_Delayms+3,w
   391     03BF  1C03               	skipc
   392     03C0  0F13               	incfsz	??_Delayms+3,w
   393     03C1  2BC3               	goto	u69
   394     03C2  2BC4               	goto	u60
   395     03C3                     u69:
   396     03C3  029B               	subwf	Delayms@count+3,f
   397     03C4                     u60:
   398     03C4  0A18               	incf	Delayms@count,w
   399     03C5  1D03               	skipz
   400     03C6  2BD1               	goto	u71
   401     03C7  0A19               	incf	Delayms@count+1,w
   402     03C8  1D03               	skipz
   403     03C9  2BD1               	goto	u71
   404     03CA  0A1A               	incf	Delayms@count+2,w
   405     03CB  1D03               	skipz
   406     03CC  2BD1               	goto	u71
   407     03CD  0A1B               	incf	Delayms@count+3,w
   408     03CE  1D03               	btfss	3,2
   409     03CF  2BD1               	goto	u71
   410     03D0  2BD2               	goto	u70
   411     03D1                     u71:
   412     03D1  2BA7               	goto	l597
   413     03D2                     u70:
   414     03D2                     l599:
   415                           
   416                           ;main.c: 23:     while (ms--)
   417     03D2  3001               	movlw	1
   418     03D3  1283               	bcf	3,5	;RP0=0, select bank0
   419     03D4  0090               	movwf	??_Delayms
   420     03D5  3000               	movlw	0
   421     03D6  0091               	movwf	??_Delayms+1
   422     03D7  3000               	movlw	0
   423     03D8  0092               	movwf	??_Delayms+2
   424     03D9  3000               	movlw	0
   425     03DA  0093               	movwf	??_Delayms+3
   426     03DB  0810               	movf	??_Delayms,w
   427     03DC  0294               	subwf	Delayms@ms,f
   428     03DD  0811               	movf	??_Delayms+1,w
   429     03DE  1C03               	skipc
   430     03DF  0F11               	incfsz	??_Delayms+1,w
   431     03E0  2BE2               	goto	u85
   432     03E1  2BE3               	goto	u86
   433     03E2                     u85:
   434     03E2  0295               	subwf	Delayms@ms+1,f
   435     03E3                     u86:
   436     03E3  0812               	movf	??_Delayms+2,w
   437     03E4  1C03               	skipc
   438     03E5  0F12               	incfsz	??_Delayms+2,w
   439     03E6  2BE8               	goto	u87
   440     03E7  2BE9               	goto	u88
   441     03E8                     u87:
   442     03E8  0296               	subwf	Delayms@ms+2,f
   443     03E9                     u88:
   444     03E9  0813               	movf	??_Delayms+3,w
   445     03EA  1C03               	skipc
   446     03EB  0F13               	incfsz	??_Delayms+3,w
   447     03EC  2BEE               	goto	u89
   448     03ED  2BEF               	goto	u80
   449     03EE                     u89:
   450     03EE  0297               	subwf	Delayms@ms+3,f
   451     03EF                     u80:
   452     03EF  0A14               	incf	Delayms@ms,w
   453     03F0  1D03               	skipz
   454     03F1  2BFC               	goto	u91
   455     03F2  0A15               	incf	Delayms@ms+1,w
   456     03F3  1D03               	skipz
   457     03F4  2BFC               	goto	u91
   458     03F5  0A16               	incf	Delayms@ms+2,w
   459     03F6  1D03               	skipz
   460     03F7  2BFC               	goto	u91
   461     03F8  0A17               	incf	Delayms@ms+3,w
   462     03F9  1D03               	btfss	3,2
   463     03FA  2BFC               	goto	u91
   464     03FB  2BFD               	goto	u90
   465     03FC                     u91:
   466     03FC  2B9E               	goto	l595
   467     03FD                     u90:
   468     03FD                     l13:
   469     03FD  0008               	return
   470     03FE                     __end_of_Delayms:
   471     004E                     btemp	set	78	;btemp
   472     004E                     wtemp0	set	78

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     22      22

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_onboardDemo
    _onboardDemo->_Delayms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     416
                                             18 BANK0      4     0      4
                        _onboardDemo
 ---------------------------------------------------------------------------------
 (1) _onboardDemo                                          2     0      2     416
                                             16 BANK0      2     0      2
                            _Delayms
 ---------------------------------------------------------------------------------
 (2) _Delayms                                             16    12      4     220
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _onboardDemo
     _Delayms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     16      16       3       33.3%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 11 18:20:43 2024

                     l13 03FD                       l21 037F                       l16 037E  
                     u60 03C4                       u70 03D2                       u71 03D1  
                     u80 03EF                       u65 03B7                       u90 03FD  
                     u66 03B8                       u91 03FC                       u67 03BD  
                     u68 03BE                       u85 03E2                       u69 03C3  
                     u86 03E3                       u87 03E8                       u88 03E9  
                     u89 03EE                      l601 036C                      l603 036E  
                    l611 0388                      l605 0375                      l613 038D  
                    l607 037F                      l609 0383                      l593 0394  
                    l595 039E                      l597 03A7                      l599 03D2  
                    u100 038D                      u101 038C                     _main 037F  
                   btemp 004E                     start 0000          __end_of_Delayms 03FE  
                  ?_main 001E                    _TRISA 0085                    status 0003  
                  wtemp0 004E          __initialization 03FE             __end_of_main 0394  
                 ??_main 0000             ?_onboardDemo 001C                ??_Delayms 0010  
__end_of__initialization 03FE           __pcstackCOMMON 0000               __pmaintext 037F  
                _Delayms 0394      Delayms@milliseconds 000C                  __ptext1 036C  
                __ptext2 0394     end_of_initialization 03FE                Delayms@ms 0014  
              _PORTAbits 0005      start_initialization 03FE             Delayms@count 0018  
              ___latbits 0000            __pcstackBANK0 000C                 ?_Delayms 000C  
          ??_onboardDemo 0000      __end_of_onboardDemo 037F                 main@argc 001E  
               main@argv 0020              _onboardDemo 036C         onboardDemo@delay 001C  
